version: 2.1
orbs:
    slack: circleci/slack@4.0
commands:
    destroy-environment:
        description: Destroy back-end and front-end cloudformation stacks given a workflow ID.
        parameters:
        # Add parameter here
        steps:
            - run:
                  name: Destroy environments
                  when: on_fail
                  command: |
                      # Your code here
                      exit 1
    revert-migrations:
        description: Revert the last migration if successfully run in the current workflow.
        parameters:
        # Add parameter here
        steps:
            - run:
                  name: Revert migrations
                  # Add when this will run
                  command: |
                      # Curl command here to see if there was a successful migration associated with the workflow id, store result in SUCCESS variable
                      SUCCESS = 1
                      if(( $SUCCESS==1 ));
                      then
                      #  cd ~/project/backend
                      #  npm install
                      #  Add revert code here. You can find this in the Getting Started section.
                        exit 1
                      fi
    slack-fail-notification:
        description: Send notification to slack channel when there's a failure
        steps:
            - slack/notify:
                  custom: |
                    {
                       "blocks": [
                         {
                            "type": "section",
                            "fields": [
                                {
                                  "type": "plain_text",
                                  "text": "*This is a text notification*",
                                  "emoji": true
                                 }
                            ]
                         }
                       ]
                    }
                  event: fail
jobs:
    build-frontend:
        docker:
            - image: circleci/node:13.8.0
        steps:
            - checkout
            - restore_cache:
                  keys: [frontend-dependencies]
            - run:
                  name: Build front-end
                  command: |
                      cd ~/project/frontend
                      npm i
                      npm run build
            - save_cache:
                  paths: [frontend/node_modules]
                  key: frontend-dependencies
    
    build-backend:
        docker:
            - image: circleci/node:13.8.0
        steps:
            - checkout
            - restore_cache:
                  keys: [backend-dependencies]
            - run:
                  name: Back-end build
                  command: |
                      cd ~/project/backend
                      npm i
                      npm run build
            - save_cache:
                  paths: [backend/node_modules]
                  key: backend-dependencies
    test-frontend:
        docker:
            - image: circleci/node:13.8.0
        steps:
            - checkout
            - restore_cache:
                  keys: [frontend-dependencies]
            - run:
                  name: Test Frontend
                  command: |
                      cd ~/project/frontend
                      npm i
                      npm run test
    test-backend:
        docker:
            - image: circleci/node:13.8.0
        steps:
            - checkout
            - restore_cache:
                  keys: [backend-dependencies]
            - run:
                  name: Test Backend
                  command: |
                        cd ~/project/backend
                        npm i
                        npm run test
    scan-frontend:
        docker:
            - image: circleci/node:13.8.0
        steps:
            - checkout
            - run:
                  name: Scan frontend
                  command: |
                      cd ~/project/frontend
                      npm audit fix --audit-level=critical --force
    scan-backend:
        docker:
            - image: circleci/node:13.8.0
        steps:
            - checkout
            - run:
                  name: Scan backend
                  command: |
                      cd ~/project/backend
                      npm audit --audit-level=critical
            - slack-fail-notification
workflows:
    default:
        jobs:
            - build-frontend
            - build-backend
            - test-frontend:
                  requires: [build-frontend]
            - test-backend:
                  requires: [build-backend]
            - scan-frontend:
                  requires: [build-frontend]
            - scan-backend:
                  requires: [build-backend]
            - slack-fail-notification:
                  requires: [build-frontend,build-backend,test-frontend,test-backend,scan-backend,scan-frontend]
                  context: slack-secrets
                  